@model SchoolSystem1.View_Model.UserVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit" , "Student" , FormMethod.Post , new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>UserVM</h4>
    <hr />

    @Html.HiddenFor(model => model.ID)
    <div calss="container">
        <div class="row">
            <div class="form-group col-4">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="form-group col-4">
                @Html.LabelFor(model => model.LasstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LasstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LasstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-4">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>
        </div>
    </div>
    <div calss="container">
        <div class="row">
            <div class="form-group col-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="form-group col-4">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="form-group col-4">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>
        </div>
    </div>
    <div calss="container">
        <div class="row">
            <div class="form-group col-4">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>



            <div class="form-group col-4">
                @Html.Label("Department", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DepartmentID", (MultiSelectList)ViewBag.Department, htmlAttributes: new { @class = "form-control" })

                </div>
            </div>
        </div>
    </div>

    <div calss="container">
        <div class="row">
            <div class="form-group">
                @Html.Label("Courses", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @for (int i = 0; i < Model.ListOfCourses.Count; i++)
                    {
                        <div class="form-check form-check-inline check  ">
                            @Html.HiddenFor(m => m.ListOfCourses[i].CourseID)
                            @Html.HiddenFor(m => m.ListOfCourses[i].Name)
                            <label class="text-dark">
                                @Html.CheckBoxFor(m => m.ListOfCourses[i].IsSelected, new { @class = "CheckBox0 " })
                                @Html.DisplayFor(m => m.ListOfCourses[i].Name)
                            </label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div calss="container">
        <div class="row">
            <div class="form-group">
                <input type="hidden" name="Img" value="@Model.Img " />
                @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img src="~/img/@Model.Img " style=" width: 200px; height: 200px; border-radius: 70%" />
                </div>
            </div>
            <div class=" form-group">
                <div class="col-md-10">
                    @Html.TextBox("image1", "", new { @class = "image-upload", accept = "image/*", id = "Image1", Type = "file", style = "height: 50px;" })

                </div>

            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success " />
        </div>
    </div>
</div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
